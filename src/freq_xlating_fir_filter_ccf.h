/* -*- c++ -*- */
/*
 * Copyright 2002,2004,2012 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */

/*
 * WARNING: This file is automatically generated by cmake.
 * Any changes made to this file will be overwritten.
 */

#ifndef INCLUDED_FILTER_FREQ_XLATING_FIR_FILTER_CCF_H
#define	INCLUDED_FILTER_FREQ_XLATING_FIR_FILTER_CCF_H

// #include <gnuradio/filter/api.h>
// #include <gnuradio/filter/fir_filter.h>
// #include <gnuradio/filter/freq_xlating_fir_filter_ccf.h>
// #include <gnuradio/blocks/rotator.h>
#include <complex>
#include <iostream>
#include "fir_filter.h"
#include "freq_xlating_fir_filter_ccf.h"
#include "rotator.h"

typedef std::complex<float>  gr_complex;

class freq_xlating_fir_filter_ccf
{
  protected:
    std::vector<float> d_proto_taps;
    fir_filter_ccc *d_composite_fir;
    rotator d_r;
    double d_center_freq;
    double d_sampling_freq;
    bool d_updated;
    int d_decimation;

  virtual void build_composite_fir();
  
  public:
    freq_xlating_fir_filter_ccf(int decimation,
        const std::vector<float> &taps,
        double center_freq,
        double sampling_freq);
    virtual ~freq_xlating_fir_filter_ccf();

    void set_center_freq(double center_freq);
    double center_freq() const;

    void set_taps(const std::vector<float> &taps);
    std::vector<float> taps() const;

    void work(const gr_complex * in, gr_complex * out, int noutput_items);
};

#endif /* INCLUDED_FILTER_FREQ_XLATING_FIR_FILTER_CCF_H */
